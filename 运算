运算 和 运算符 :

运算 : 一个或一个以上的数据经过变化得到一个新值的过程.

运算符 : 运算的符号就是运算符.

分 类 :

1. 算术 运算
2 .比较 运算
3. 赋值 运算
4. 逻辑 运算
5. 位   运算
6. 身份检测 运算
7. 成员检测 运算


1.算术运算符:

+
-
*
/
// 地板运算符
        只取商,无 余数 ,无 小数.
%
**


2.比较运算符:

连续的 比较运算符(合 法),
1<2<3  分开运算: 先 1<2:True,2<3:True 结果为True

>
<
>=
<=

六大数据类型 不等于 ,就不等于.  
== 等于   运算符
!= 不等于 运算符


3.赋 值 运 算 符 :

1.= 
2.+= 
3.-=
4.*=
5./=
6.%=
7.//=
8.**=


4.逻 辑 运 算(布尔值 之间的运算):

1.and 与  二目运算(两个数之间的)
2.or  或  二目运算
3.not 非  单目运算
    not True 为 False
4.xor 异或(py不支持)
    相同 为 False ,不同为 True



5.位 运 算 :

1. & 按位 与 运算(二目)
    将 两个数字 转换为 2进制,对 两个2进制数 上下对齐,前面缺少补 0 ,上位对下位 进行
    与 运算 ,1 为 True ,0 为 False

2. | 按位 或 运算(二目)
    将 两个数字 转换为 2进制,对 两个2进制数 上下对齐,前面缺少补 0 ,上位对下位 进行
    或 运算 ,1 为 True ,0 为 False

3. ~ 按位 非 运算(单目)

4. ^ 按位 异或 运算
    将 两个数字 转换为 2进制,对 两个2进制数 上下对齐,前面缺少补 0 ,上位对下位 进行
    异或 运算 ,1 为 True ,0 为 False
    
5. << 左移 运算(单目)
    将 一个数字 转换为 2进制,然后 整体 向左移动一位,空出的 补0.
        规律 : 左移 1 位,原10进制数 *2 , 左移 2 位,原十进制数 *4.

6. >> 右移 运算(单目)
    将 一个数字 转换为 2进制,然后 整体 向右移动一位,空出的 补0.
        规律 : 右移 1 位,原10进制数 /2 , 右移 2 位,原十进制数 /4.
            做的是 // 取商运算.



6.身 份 检 测 运 算 : 检测两个数据在内存中 是否是同一个值.

原理 : 检测数据的 id(标识). 用 id()方法 查看 id标识.
    系统 会为 每个 数据 分配编号,相同的数据 id 标识相同.
    相同的 值:
    
    (版本 3.6 的 实测)
        整数的 0-256 id 标识 相同
            负数 -1 ~ -5 id 标识 相同
        浮点 id 标识 不同
        英文 符号 字符串 无论大小写 id 标识 相同
        中文 字符串 id 标识 不同

        容器:(容器中 只有一个数值的 id 标识 也不同)
        列表 id 标识 不同
        元祖 id 标识 不同
        集合 id 标识 不同
        列表 id 标识 不同
	var 1 = var 2 = [1,2]
	id 是 相同的.

    3.7 以上版本 整数 浮点数 和 字符串 只要值一样,id标识就一样.

1. is 检测 一个数据 和 另一个数据 在内存 中 是否 是同一个值.
    a = 5 b = 5 a is b : True
    a = 5 b = 6 a is b : False

1. is not 检测 一个数据 和 另一个数据 在内存 中 是否是 不是同一个值.
    a = 5 b = 6 a is not b : True
    a = 5 b = 5 a is not b : False

7.成 员 检 测 运 算 : 

注意 : 只能作用于 容器. 字典 查的是 键.

<1> in  : 检测一个数据是否 在 于容器当中.	

<2> not in : 检测数据 是否 不在 容器当中.
