一. SQL Structured Query Language : 结构化 查询 语言


    意 义 : 如果访问量很大,相比直接读取文件,通过数据管理软件,方便操作数据.

    功 能 : 
            
        1. 数据的 持久化保存 和 添加 删除 修改 查询.

        2. 高效率查询并提取满足条件的数据,数据访问速度快.

        3. 约束存储的数据类型.
        
        4. 支持远程数据共享和权限管理.


    关 系 型 数 据 库 : (MySQL.Oracle.Microsoft SQL Server.PgSQL)

        特 点 :

            1.数据以表格的形式出现,每个表有自己的名字(同数据库内唯一),表内被组织

            为行和列的一一对应关系.

            2.行为各种数据记录名称.

            3.列为记录名称所对应的数据域.

            4.许多的行和列组成一张表格.

            5.若干的表格组成关系型数据库(database),每个数据库有自己的名字(唯一)


    非 关 系 型 数 据 库 : (Redis.Mongodb)




二. MySQL 

    
    概 念 : 

        1. 库    像文件夹,里面存放多个表(文件),通常一个项目一个库.

        2. 表    表像excel中的一个表格,里面有很多的 字段数据(行,列).

        3. 行    一行数据.

        4. 列    一列数据.

        5. 字段  列的头.一列数据的一个表示.

        6. 主 键 : 每个行信息 在数据库中的 <唯一的标识>,类似身份证.
               
               作 用 : 快速的找到 这一行的数据.


    常见英文: 1. information_schema 信息架构

              2. performance_schema 性能架构

              3. table 表(mysql里表) 

              4. drop 删除

              5. select 选择



三. 基 本 操 作 :

    <1> 开启 关闭 MySQL 服务 :

        查看已经开启的服务 : service --status-all

            开 启 :
            
            service mysql start

            关 闭 :

            service mysql stop



四. 库 操 作 :


    <1> 查 看 所 有 库 :
        show databases;

    <2> 创 建 一 个  库 :
        create database library_name default charset='utf8mb4';

    <3> 打 开 一  个 库 :
        use library_name;



五. 表 操 作 :


    <1> 查 看 库 中 所 有 表 :
        show tables;

    <2> 创 建 表 : (int:最大存42亿,需要运算的存int)

        创建表时 <需指定 字段 和 类型>,
        varchar()是字符串类型,参数为 不超过参数个字符.  

     ! ! ! 注 意 : ! ! ! 是在 <当前> 的库中创建,如表明相同则覆盖了.切记.

        create table table_name(
        id int,
        username varchar(30),
        age int,
        phone varchar(11)
        );
        
    <3> 删 除 表 :
        drop table table_name;


    <4> 查 看 表 中 的 数 据 :
        select * from table;

        select * from table where username='张三'
            
            查的 table表中 username为张三的一行.

        select id from table where username='张三'

            查的 table表中 username为张三的一行中的 id数据.


    <5> 给 表 添  加 数 据 : 只添加一条

      1.指定字段 按照字段的顺序添加数据 :

        insert into table_name(filed_name,filed_name) values(content,content)
        写()表示要指定 <字段> 指定的字段 <顺序随意>.

        示 例 :
        insert into test(id,username,phone,age) values(1,'张三','159000',24)


      2.不指定字段,但要按表的 字段顺序添加 :
        
        示 例 :
        insert into test values(表的字段1,表的字段2,表的字段3....)


      3.批量 指定字段 :
        
        insert into list(id,username,phone,age) values
        (2,'a','1',20),
        (3,'b','2',21),
        (4,'c','3',22),
        (5,'d','4',23),
        (6,'e','5',24);
       
       4.批量 不指定字段 按照表字段顺序 : 

        insert into list values
        (2,'a','1',20),
        (3,'b','2',21),
        (4,'c','3',22),
        (5,'d','4',23),
        (6,'e','5',24);


    <6> 给 表 删  除 数 据 :
        delete from table_name where field_name=数据;

        示 例 : 
        delete from list where username='a';

        中文翻译为:从哪个表 删除哪个字段 的数据为 什么的信息.

    <7> 修 改 表 的 数 据 : 
        update table_name set filed_name=新数据 where filed_name=某个字段;

        示 例 :
        update list set age=30 where username='c';

        中文翻译:更新设置某表的字段数据为新的值,改字段为哪里的.
