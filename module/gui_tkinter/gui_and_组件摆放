一. GUI 用户交互界面 及 相 关 概 念 :

    tkinter python 自带的gui库,对图形图像处理库tk的封装.

        跨平台的

    其 他 gui :

        pythonwin    为windows开发用的库,只能在windows开发时使用.

        pyQT等 

    
    <1> 组 件 概 念 : 组成 <图形界面的构成内容> ,就是组件.(按钮,列表,输入框等)

    <2> 窗 口 : 一个软件的矩形区域.



二. tkinter 


    安 装 : apt-get install python3-tk

    导 包 : import tkinter

    查 看 : help(tkinter)

    <详见/practice/tkinter/tkinter_01.py>


    <1> 最 简 单 的 界 面 :

        1.创建主窗口对象
                
            root = tkinter.Tk()    

        2.将主窗口加入消息循环

            root.mainloop()

        3.为窗体设置大小 : x轴 y轴

          最 大 :

            root.maxsize(x,y)

          最 小 :

            root.minsize(x,y)

          示 例 :

            root.minsize(900,600)



    <2> 组 件 的 摆 放 方 式 :


      1.pack()方式    ->方向/方位摆放方法 (不推荐)

        <详见下方 1.pack()布局 文件为/practice/tkinter/pack布局_tkinter_01.py>

            按钮对象.pack(side='top默认,left,right,bottom')        

            pack()摆放方式,每一个组件都是占据了 <一整行> 或 <一整列>.

        注 意 : 仅仅使用pack无法实现表格方式,必须借助后面的Frame组件才可以实现

        非常复杂,所以不推荐使用.


      2.grid()方式    ->网格摆放方法 (推荐 左上角是基准点)

        <详见下方 2.grid()布局 文件/practice/tkinter/grid布局_tkinter_01.py>

        注 意 : 网格直接写 row = 5 ,column = 5 是没用的,只是按顺序往后摆格.


      3.place()方式   ->定位摆放方法 (推荐 左上角是基准点)


        两种布局方式 : 绝对 和 相对

            绝对定位布局 : 
        
            <详见 文件/prctice/tkinter/place布局_tkinter_绝对.py>
    
              单位都是 <像素>,不会 <自适应>

                x 设置距离左上角的距离 单位像素

                y 设置距离左上角的距离 单位像素
                    
                width 设置组件所占据的宽度 单位像素

                height 设置组件所占据的宽度 单位像素


            相对定位布局 :

              以下属性设置都是相对于界面或者高度的百分比,可以根据界面的大小

              改变 而改变.

            <详见 文件/prctice/tkinter/place布局_tkinter_相对.py>

                relx 设置距离左上角的 占1的距离 0.01 0.45 等等 代替百分比 
                    
                rely 设置距离左上角的 占1的距离 0.01 0.45 等等 代替百分比 
                   
                relwidth 设置距离左上角的 占1的距离 0.01 0.45 等等 代替百分比 

                relheight 设置距离左上角的 占1的距离 0.01 0.45 等等 代替百分比 
                
            

    1. pack() 方 式 布 局 :


    <1> 组 件 的 x,y 轴 宽 度 :

        1. 水平 : 摆放方式(ipadx = 20)

        2. 垂直 : 摆放方式(ipady = 20) 
             

    <2> 组件 距离左右的组件 距离 :

        如果周围无组件,设置的则是距离 窗体的 距离.

        1. 水平 : 摆放方式(padx = 20)

        2. 垂直 : 摆放方式(pady = 20)


    <3> 填充满 整行 或 整列 : 

        1. 水平 : 摆放方式(fill = 'x')

        2. 垂直 : 摆放方式(fill = 'y')

            注 意 : 左右摆放,fill填充 y 才会生效.

        3. 占满整个窗体 : 摆放方式(expand='yes',fill='both')

           如果有其他的组件,则占据剩余所有空间.

               expand 有两个值,yes and no .


    2. grid() 方 式 布 局 :

      <1> row 行(默认为0)    column 列(默认为0)

        示例 : grid(row=5,column=5)

        rowspan 跨行          columnspan 跨列


      <2> 组 件 的 x,y 轴 宽 度 :

        1. 水平 : 摆放方式(ipadx = 20)

        2. 垂直 : 摆放方式(ipady = 20)


      <3> 组件 距离左右的组件 距离 :

        如果周围无组件,设置的则是距离 窗体的 距离.

        1. 水平 : 摆放方式(padx = 20)

        2. 垂直 : 摆放方式(pady = 20)

    
    3. place() 方 式 布 局 :

      <1> x 距离左上角 x轴方向距离. 

          y 距离左上角 y轴方向距离.

          示 例 : 组件对象.(x = 80,y = 30)

      <2> 组 件 的 x,y 轴 宽 度 :

        1. 水平 : width 摆放方式(width = 20)

        2. 垂直 : height 摆放方式(height = 20) 

