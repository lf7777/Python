一. 装 饰 器 : decorator


        把装饰器函数 <返回的函数> 赋值给 需要装饰的函数.

    总结: 先进入 装饰器一顿操作,最后 覆盖原函数.

    装 饰 器 步 骤 :

        1. 先把 <被装饰函数作为参数> 传入装饰器

        2. 在装饰器函数中 新建一个函数,返回值是此函数.

        3. 把返回值 赋值(覆盖) 被装饰的函数.


二. 示 例 :

    @decor

    def 被装饰函数名():

        pass

    <1> 普通不带参 装饰器. <详见practice/decorator_01.py>


    <2> 带参 装饰器 :

            <详见practice/decorator_02.py> 

            (1) <原函数参数> = <准备覆盖的函数> = <调用的原函数>

                    装饰器内的参数名 保持一致.

                    必须都有参数,被装饰函数参数不必和装饰器参数相同.

    <3> 收集参数的 装饰器 :

            <详见practice/decorator_03.py>


    <4> 为装饰器添加参数 :

            <详见practice/decorator_04.py>


    <5> 将类作为参数传入装饰器中使用 :
            
            <详见practice/decorator_05.py>

    <6> 用类做装饰器 :

            <详见practice/decorator_06.py>

    <7> 为类添加装饰器:

            <详见practice/decorator_07.py>

    <8> 多层装饰器嵌套 :

            <详见practice/decorator_08.py>
