一. 概 念 :

    面向对象学习 : (1) 面向对象语法学习.(靠记忆)

                   (2) 面向对象思想学习. 



    面向对象的优势 : (1) 把零散的程序 按照特征进行归类.

                     (2) 能够实现良好的程序结构,方便程序的开发管理和维护.



    效 率 : 运行效率 : (1) 计算机. 面向对象不如过程化的块.

            开发效率 : (2) 程序员. 面向对象比过程化开发要方便的多.


    面向对象的 特色 :
                      (1) 高内聚(具有关联的功能,总结在一个结构中)

                      (2) 低耦合(没有关联系的功能,放在不同的结构中)


    面向对象的单词 :
                    
                     (1) OO 面向对象

                     (2) OOP 面向对象程序开发
                                  |
                     (3) OOA 面向对象的程序分析 }

                           Analysis 分析        |

                     (4) OOD 面向对象程序设计   |

                           Design               |

                     (5) OOI 面向对象程序实现   }



二. 类 和 对象 的关系 :

    <1> 类是由对象 总结而来的 ,这个过程叫做 抽象化.

    <2> 对象是类 具体实施而来的 ,这个过程叫做 实例化

        抽 象 化 : 抽出现象 或者 特征.

        实 例 化 : 实现 个例 的过程.



三. 面 向 对 象 常 用 函 数 :


    <1> issubclass() sub:附属的
        检测一个类是否是另一个类的子类.

        格 式 : issubclass(子类,父类)

                return True or False


    <2> isinstance()
        检测一个对象是否是指定类的实例. 

        格 式 :1. isinstance(对象,类)

                  return True or False 

               2. isinstance(对象,(类1,类2))
               检测对象 是否是元祖中某一个类的实例,<但类必须已经存在>.
            
                  return True or False
    

    <3> hasattr()
        检测类/对象 能否查找到某个成员. 

        格 式 : hasattr(类,!字符串格式!成员名)

                return True or False

        例 如 : hasattr(Test,'name')
    
        注 意 : 可以检测类也可以检测对象,只要可以访问就存在.

    
    <4> getattr()
        查找并获取类/对象 的成员值.

    成 员 存 在 :

        格 式 : getattr(类/对象,字符串格式成员名)

                return 成员的值(函数是一个地址)

        例 如 : getattr(Test,'name')

        注 意 : 可以检测类也可以检测对象,只要可以访问到就返回值.

    成 员 不 存 在 :

        格 式 : getattr(类/对象,字符串格式成员名,'默认值')

                return 默认值

        例 如 : getattr(Test,'abc','不存在')

                return '不存在'

    
    <5> setattr()
        创建或修改成员的值.(类或对象必须已存在) 

        格 式 : setattr(类/对象,'成员名',值)

        例 如 : setattr(Test/obj,'age',24)

        无返回值

    
    <6> delattr
        删除 类/对象 的成员.

        格 式 : delattr(类/对象,字符串格式成员名)
    
        无返回值
    
                    
    <7> dir()
        获取 类/对象 可以访问的所有成员的列表.

        格 式 : dir(类/对象)

        示 例 : dir(Test/obj)

                return 列表

    
    <8> property()
        设置描述符(自定义函数)操作函数.

            <具体用法详见 practice/descriptor_02.py>

        格 式 : 成员 =  property(get...,set...,del...)

        注 意 : (1) 初始化一个临时变量,名字不能为要描述的名字

                (2) return 在 get 里
