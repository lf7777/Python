一. 声 明 : 

1.list()

list1 = list(参数只有一个,容器类数据)

2.list1 = []


二. 访问 列表 中的值 :

1.可以使用 跳步值 查看.
    l[1::2]


三. 修改 列表 中的值 :

1. 单 索引 :
    l[索引] = 值. 

2. 切片 索引 :
    l[开始索引:结束索引] = [元素内容]



四. 删除 列表 中的值 :

1.单 索引 :
    del list1[索引(0开始)]

2.切片 索引 :
    del list1[开始索引:结束索引]
    或者:
    list[开始,结束]=[]

3.l [::2] = []
    报错,不能使用 跳步值.



五. 添加 列表 中的值:

1.不能通过 索引 添加 值.

2.list1 = ['a','b','c']

    变量[开始索引:结束索引] = 要添加的数据

    list1[1:1] = ['111','222']
        return ['a','111','222','b','c']

    注意 : 向 列表 添加 内容 实际上是 迭代 可迭代的 元素 进去. 
    添加元素,必须添加 可迭代对象. 如果不写成列表格式,则会将 添加的内容 分开 添进列表.

3.l [::2] = []
    报错,不能使用 跳步值.



六. 删除 变量 :

1.删除 列表 : del list1



七. 列表 切片 :

1.切片 赋值 :

<1> list[1:4]=[赋值的元素内容] 



八. 列表的 其他运算 :

1. * 
2. +
3. 成员检测运算 :
(1) in 
(2) not in 



列表 常用 函数 :

1.max()
<1> 一个参数 或 一串 数字.
    max(变量)

<2> max(变量,变量)
    按 列表 顺序 逐个比较 每两个值.
    return 较大 元素的变量 的列表内容.

2.min()
    和 max() 相同
<1>min(变量)

<2>多个变量 同max()

3.len()
len(变量)

4.list()


九. 列 表 推 导 式 :

1.单 循 环 :
new = [i for i in range(1,11) if i % 2 == 1]
    最左侧的 语句块 是进入 列表最终的 元素

2.多 循 环 :
<1>
colors1 = ['红','黄','绿']
colors2 = ['黑','白','橙']
[i + j for i in colors1 for j in colors2]

<2>取下标相同的 颜色,进行组合 :
[i + j for i in colors1 for j in colors2 if colors1.index(i) == colors2.index(j)]


十. 列表相关 函数 :

<1>append() 
末尾添加

    在列表的末尾一个数据
        list.append(值)

<2>insert()
索引前添加

    在列表的 指定下表索引之前 添加数据
        list.insert(索引位置,值)

<3>pop()
索引删除

    在列表中 指定索引位置 删除数据
        list.pop(索引位置)

<4>remove()
值删除

    在列表中 删除指定的数据
        remove(值)

<5>clear()
清空列表
        list.clear()

<6>copy()
复制列表
        list.copy()

<7>count()
值次数

    计算列表中 指定数据的 出现次数
        list.count(值)

<8>extend()
    将两个列表 合并为一个
        list.extend(list)

<9>index()
rindex()
值的索引下标

    返回元素 在列表中第一次出现的 索引
        list.index(值)

<10>reverse()
    列表反转,修改原列表
        list.reverse()


<11>其余方法 参考 str 文件中的 内容进行复习.


Python内置一种数据类型是列表:list,是有序的集合,可以随时增删改查

1.增:

list.append();  末尾添加
list.insert(1,'Jack')

2.删:

删除末尾的元素:list.pop()
删除指定位置的元素:list.pop(1);
del list[0]

3.改:

list[0]=啥. 也是都可以的

4.查看:

可以使用list[0]表示第一个.
可以使用list-1]表示最后一个.
可以使用list[-3]表示第一个.
list查看所有.
len(list)查看有几个.

list里的元素可以是另一个list,也可以有二维数组.原本数组的长度不会因为二维数组内元素增加变化.

多维数组内容的增:
list[1].insert(1,9)

列表生成式:(只是一个式子)
    语法:变量接收 res = [x*x for i in sth if x % 2 ==0]
    两层循环: res = [m+n for m in 'abc' for n in str(123)] 结果和其他语言两层循环相同

总结:
1.列表生成器必须用[]包起来.

2.第一个代码块修改内容:
(1)原样输出用原变量表示,不写报错.
(2)比如:x*x,m+n,k+'=',+v.[s.lower() for s in l],使用一个代码块内容.

3.第二个代码块填充内容

4.第三个代码块做条件判断:
(1)如果不是列表生成器不能用if做判断.
(2)第三个代码块做条件判断[s.lower() for s in l1 if isinstance(s,str)]
第三块或者if s % 2 ==0等等.


列表逻辑:
['hi']*4
['hi','hi','hi','hi']

'i' in ['hi','i']
True


method:

1.list.sort()
列表排序且只能给列表排序:
x = [5,1,5,6]
x.sort()
修改了x指向的列表的值顺序,意思是修改了原列表,英文同时修改.

2.list.count(x) 返回x在列表中出现的次数.

3.print(list*2)  输入两次列表.

4.连接列表: list_01+list_02

5.max(list) 返回最大元素
min(list) 返回最小元素

6.list.index(55) 返回55在列表中的第一个索引位置.

7.x = list.copy() 列表复制.

8.x.extend([33,55]):也可合并量列表.
添加元素,参数为可迭代对象,该语句将直接修改x列表的内容.
