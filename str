一.字符串 定义 :

1.''

2.""

3.''' ''' 或""" """



二. 字符串 相关 操作 :

1. +   连接操作
2. *   复制操作
3. []  索引操作
4. [:] 切片操作
5. 元字符串



三. 字符串 方法 :

<1> 大小写 转换 :

1.字符串 全部 转换为 大写 :
    str.upper()

2.字符串 全部 转换为 小写 :
    str.lower()

3.字符串 只有首字符 大写 :
    str.capitalize()

4.字符串 所有单词 首字符 大写 :
    str.title()

5.字符串 大写变小写 小写变大写 :
    str.swapcase()


<2> 查找 :

1.index()
    (1)index('str')
        在整个字符串中 查找 指定字符 出现的位置.
    (2)index('str',3)
        从第二个参数的位置 开始,查找 指定字符 出现的位置.(依然从0开始)
    (3)index('str',3,7)
        3 开始到 7,查找 指定字符 出现的位置.(依然从0开始)


2.rindex()
    (1)倒着查,得到倒着查到的 第一个指定字符 ,返回出现的位置.(依然从0开始) 


3.find()
    只限字符串
    功能,参数,语法,格式 和 index() 一模一样.
    区 别 :
        如果要查找的 'str' 不存在,返回 -1.


4.rfind()
    功能,参数,语法,格式 和 index() 一模一样.
    区 别 :
        如果要查找的 'str' 不存在,返回 -1.


5.count()
    计算 值出现的 次数
    str.count(值)
        


<3> 判断 :


1.isupper()
    检测 字符串 是否 都是 大写字母 组成.
    str.isupper()
    return True or False


2.islower()
    检测 字符串 是否 都是 小写字母 组成.
    str.islower()
    return True or False


3.istitle()
    检测 字符串 是否 都是 小写字母 组成.
    str.istitle()
    return True or False


4.isalnum()
    检测 字符串 是否 包含and仅包含 中文,字母,数字.
    str.isalnum()
    return True or False


5.isalpha()
    检测 字符串 是否 包含and仅包含 中文,字母.
    str.isalpha()
    return True and False


6.isdigit()
  isnumeric()
    检测 字符串 是否 包含and仅包含 数字.
    str.isdigit()
    str.isnumeric()
        注意:数字需要是字符串类型 !!! 


7.isspace()
    检测 字符串 是否 包含and仅包含 不可见字符.
    str.isspace()
        例如:\n\r\t 空格等.


8.startswith()
    检测 字符串 是否 以 指定的字符串 开头. 
    str.startswith('aa')


9.endswith()
    检测 字符串 是否 以 指定的字符串 结尾.
    str.endswith('aa')



<4> 字符串 操作 相关函数 :


1.split()
    
从 字符串 切割 到 列表.

    使用 特定的字符串 切割 字符串 到 列表里.
    str.split()

    (1)'abc'.split('b')
            return ['a','c']

    (2)'abcabcabc'.split('c',2)
        第二个参数 表示 切割的 次数 
            return ['ab','ab','abc']


2.join() 

从 列表 合并 成 字符串.

    和 split() 函数 正相反,使用 特定的 字符串 ,将容器(列表,元祖,集合也可以不推荐)里的 元素 合并 为字符串.
        str.join()
            '#'.join(['a','b','c'])
                return 'a#b#c'


填充函数 : zfill() center() ljust() rjust()
    l : left    r : right 


3.zfill()
    zero fill 零填充 效果.
    str.zfill()
        '5'.zfill(6)
            return '000005'
    参数为几 则表示一共有 几位.且只能填 0 .


4.center()
    使用 指定的 字符串 将 字符串 填充到 指定的 长度.
        字符串 居中! 左右填充.第二个参数 默认填充 空格.
    str.center()
        ab.center(8,'#')
            return '###ab###'


5.ljust()

左对齐,右填充.

    使用 指定的 字符串 将 字符串右侧 填充到 指定的长度.
        右侧 进行填充.第二个参数 默认填充 空格.
    str.ljust()
        'ab'.ljust(8,'#')
            return 'ab######'
            

6.rjust()

右对齐,左填充.

    使用 指定的 字符串 将 字符串左侧 填充到 指定的长度. 
        左侧 进行填充.第二个参数 默认填充 空格.
    str.rjust()
        'ab'.rjust(8,'#')
            return '######ab'
    也可来 代替 zfill()
        str.rjust(8,'0')


去除函数 : strip() lstrip() rstrp()

两侧的 字符串 必须是 连续的.


7.strip()

去两侧.

    去除字符串 两侧 所有 指定的 字符串.
        默认参数 值 : 空格
    str.strip()
        '    a    '.strip(' ')
            return 'a'


8.rstrip()

去右边.

    去除字符串 右侧 所有 指定的 字符串.
        '    a    '.rstrip(' ')
            return '    a'


9.lstrip()

去左边.

    去除字符串 左侧 所有 指定的 字符串.
        '    a    '.lstrip()
            return 'a    '


10.replace()

replace 原内容 新内容 次数.

    替换
    str.replace('原内容','新内容',次数(默认全替换))

    也可用作删除 
    str.replace('原内容','')


11.count()
值次数

    计算列表中 指定数据的 出现次数
        list.count(值)



四.字符串 格式化 :

1. % 格式化 操作. 

print('%d'%content)

<1> %d    要格式化一个 整型 

<2> %f    要格式化一个 浮点型    

    (1)精度设定:
        %.2f %.3f %.4f 表示保留几位小数

<3> %s    要格式化一个 字符串

<4> %c    要格式化一个 ascii码

<5> %u    要格式化一个 无符号整型(效果 和整型 是一样的)

<6> %o    要格式化一个 无符号的八进制 整型

<7> %x    要格式化一个 无符号的十六进制 整型

<8> %X    要格式化一个 无符号的十六进制 整型(大写)

<9> %e    要格式化一个 科学记数法的 浮点型

<10> %E   效果和%e一样

<11> %p   使用十六进制格式化变量地址

<12> %b   要格式化一个 无符号的二进制 整型


进 制 :

1. b 二进制  binary         bin()

2. o 八进制  octal          oct()

3. d 十进制  decimal        无

4. x 十六进制  hexadecimal  hex()


当需要 传入 多个值时 :

    叫做 元祖格式化操作 :
    必须按照 顺序传入

    print('我的名字是:%s,我的年龄是%d岁,我的身高是:%f米' %('兰鹏飞',24,1.75))

(1)宽度设定:
    %20f 表示 算上f一共 20 宽度.
    不够的 补空格.内容超过格式化的宽度时,原样输出.默认对齐方式是 内容靠右,填充在左.
        %10.2f 表示宽度为10,保留两个小数的内容.
(2)对齐方式:
    内容靠左的对齐符号是 : 挨着 %号 加 -

(3)此外 在设定宽度的 前提下 ,代替 空格填充,只能设定 0 填充 :
    挨着 %号 加 0
    '%010d'

(4)显示 正负号 :
    必须格式,加 +号,不然会被d格式化为没有 + 号的. 
    '%+10d'%10
    负号 则不用 挨着%后加 -



2. format 函 数 : 格式化操作(3.6以上版本)

    格 式 (1) : res = '{}'.format(值)  
        
        等于将值 格式化为 字符串.


<1> 单个参数 :
    str = '我的爱好是{}'
        result = str.format('学习')

<2> 多个参数 :
    str = '我的爱好是{},{},{}'
        result = str.format('学习','玩游戏','上网')

<3> 传入多个数据 , 根据 format()下标 传参数 :
        str = '我的爱好是{2},{1},{0}'
        result = str.format('学习','玩游戏','上网')
                              0       1        2

<4> 传入多个数据 , 使用 关键字参数 传递 :
    str = '我的爱好是{fir},{sec},{thi}'
    result = str.format(sec='学习',fir'玩游戏',thi='上网')

<5> 参数 是一个 容器 :
    str = '我的爱好是{0[0]},{0[1]},{0[2]}'
    hobby = ['学习','游戏','上网']
    result = str.format(hobby) 


<6> !!! 限 定 符 号 ,使得格式化具有更多功能的符号 :
    必须加 : ,表示 进行限定.

    (1) 对 齐 限 定 符 号 : 左对齐 : < ,居中对齐 : ^ ,右对齐 : > .
        格式为: : 填充内容 对齐方式 宽度.
        str = '我的爱好是{:#<10}'    
        str.format('学习')

    <2> 进 制 转 换 限 定 符 号 : 
        和 对齐限定 混用时,该符号 写在最右侧.
        str = '我的体重是{:0>20b}斤' 
        str.format(155)


<7> 精 度 限 定 符 号 :
    format函数 传入小数时,不会像%f有默认的6位,传几位是几位.
    
    str = 'pai的值是{:.2f}'
        str.format(3.1415926)

<8> 金 融 数 字 限 定 符 号 :
    每三位 加一个逗号.只可以 添加 逗号.
    str = 我的头发有{0:,}根
    str.format(12321424214)


五. 字 符 集 :
    
1. ascii码 基本 : 共 128 个.
    字符 和 数字 的对照表.

    记忆顺序 数字  大写 小写
              48    65   97

0 : 48    A : 65    a : 97
9 : 57    Z : 90    z : 122

2. GB(国标)系列的字符集 :
    GB2312 1981年发布 : 包含了巨大部分的常用汉字
    GB18030 扩大了对汉字的支持
    BIG5 繁体中文字符集
    GBK (ANSI) 民间组织推行的,国标扩展字符集,支持了绝大部分汉字

3. 万国码 unicode : 支持所有语言
    utf - 8 
    utf - 16 
    uft - 32 

注意 : 同样的内容在不同的 字符集 下,所占用的 存储空间是 不一样的.

4.bytes类型 : 
    计算机不能直接 存储 识别 使用 字符串类型,需要一个转换过程 : 
        字符串类型 -> 通过 字符集 转换为 bytes类型 -> 使用
        
    转 换 : 编 码  
        str = '学习'
        str.encode()
    转 换 : 解 码 
        bytes = b'\xe5\xad\xa6\xe4\xb9\xa0'
        bytes.decode()



    \n 表示 换行符号
    \r 表示 回车(不是回车键) 回到当前行的开头
    \b 表示 将光标的位置回退一位
    \t 表示 缩进(tab)

print(sep='-') sep 表示间隔字符.
    注意 : 只有两个字符以上时有效.

元字符:以字符串定义的格式输出,不转义任何字符.
    r R均可.
    str = r'\b\r\t\n'
    print(str)
    print(R'\b\t')



六. 字节流 字符串 转换 :

<1> encode()
    将字符串 转为 字节流.

        str.encode()

            return b'字节流'


<2> decode()方法用于转为为str.
    将 字节流 转为 字符串.

        bytes.decode()

            return '字符串'
